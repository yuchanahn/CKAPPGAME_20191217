// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct fplayer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static fplayer GetRootAsfplayer(ByteBuffer _bb) { return GetRootAsfplayer(_bb, new fplayer()); }
  public static fplayer GetRootAsfplayer(ByteBuffer _bb, fplayer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public fplayer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public eFB_Type FType { get { int o = __p.__offset(4); return o != 0 ? (eFB_Type)__p.bb.GetInt(o + __p.bb_pos) : eFB_Type.Base; } }
  public int Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
  public int Hp { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Mp { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Str { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Dex { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Exp { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Lv { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float V { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float H { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int X { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Y { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool IsDestroyed { get { int o = __p.__offset(30); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<fplayer> Createfplayer(FlatBufferBuilder builder,
      eFB_Type fType = eFB_Type.Base,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      int hp = 0,
      int mp = 0,
      int str = 0,
      int dex = 0,
      int exp = 0,
      int lv = 0,
      float v = 0.0f,
      float h = 0.0f,
      int x = 0,
      int y = 0,
      bool isDestroyed = false) {
    builder.StartObject(14);
    fplayer.AddY(builder, y);
    fplayer.AddX(builder, x);
    fplayer.AddH(builder, h);
    fplayer.AddV(builder, v);
    fplayer.AddLv(builder, lv);
    fplayer.AddExp(builder, exp);
    fplayer.AddDex(builder, dex);
    fplayer.AddStr(builder, str);
    fplayer.AddMp(builder, mp);
    fplayer.AddHp(builder, hp);
    fplayer.AddName(builder, nameOffset);
    fplayer.AddId(builder, id);
    fplayer.AddFType(builder, fType);
    fplayer.AddIsDestroyed(builder, isDestroyed);
    return fplayer.Endfplayer(builder);
  }

  public static void Startfplayer(FlatBufferBuilder builder) { builder.StartObject(14); }
  public static void AddFType(FlatBufferBuilder builder, eFB_Type fType) { builder.AddInt(0, (int)fType, 0); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(1, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddHp(FlatBufferBuilder builder, int hp) { builder.AddInt(3, hp, 0); }
  public static void AddMp(FlatBufferBuilder builder, int mp) { builder.AddInt(4, mp, 0); }
  public static void AddStr(FlatBufferBuilder builder, int str) { builder.AddInt(5, str, 0); }
  public static void AddDex(FlatBufferBuilder builder, int dex) { builder.AddInt(6, dex, 0); }
  public static void AddExp(FlatBufferBuilder builder, int exp) { builder.AddInt(7, exp, 0); }
  public static void AddLv(FlatBufferBuilder builder, int lv) { builder.AddInt(8, lv, 0); }
  public static void AddV(FlatBufferBuilder builder, float v) { builder.AddFloat(9, v, 0.0f); }
  public static void AddH(FlatBufferBuilder builder, float h) { builder.AddFloat(10, h, 0.0f); }
  public static void AddX(FlatBufferBuilder builder, int x) { builder.AddInt(11, x, 0); }
  public static void AddY(FlatBufferBuilder builder, int y) { builder.AddInt(12, y, 0); }
  public static void AddIsDestroyed(FlatBufferBuilder builder, bool isDestroyed) { builder.AddBool(13, isDestroyed, false); }
  public static Offset<fplayer> Endfplayer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<fplayer>(o);
  }
};

